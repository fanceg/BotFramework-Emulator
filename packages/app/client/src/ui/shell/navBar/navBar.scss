.nav-bar {
  background-color: var(--nav-bar-bg);
  box-shadow: var(--box-shadow-right);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  width: 50px;
}

.nav-link {
  border: 1px solid transparent;
  box-sizing: border-box;
  display: inline-block;
  height: 50px;
  position: relative;
  right: 2px; // Compensation for ::after padding
  width: 50px;

  & .badge {
    position: absolute;

    /* The icon background, which is on the ::after element will always come after the .badge
     * in the DOM, so we need to overlay the .badge on top of the icon background by bumping
     * the z-index by 1. (Shouldn't have any adverse effects because it is restricted to the <a.navLink>'s structure)
     */
    z-index: 1;

    /* 12.5px would align the top-right corner of the badge with the top-right
     * corner of the link icon. So then we need to subtract 1/2 of the badges
     * height & length (0.5 * 16px = 8px) from that to center the badge on the top-right corner
     * of the link icon. 12.5px - 8px = 4.5px
     */
     background-color: var(--nav-link-badge-bg);
     border-radius: 16px;
     color: var(--nav-link-badge-color);
     height: 16px;
     line-height: 16px;
     right: 4.5px;
     text-align: center;
     top: 4.5px;
     width: 16px;
  }

  &::before {
    content: "";
    position: absolute;
    display: inline-block;
    width: 2px;
    height: 70%;
    top: 15%;
    left: 2px;
    opacity: 0;
    background-color: var(--nav-focused-tag-bg);
  }

  &.selected, &[aria-selected="true"] {
    &::after {
      border: var(--nav-link-selected-border);
      opacity: var(--nav-icon-color-hover-opacity);
    }
  }

  &::after {
    content: "";
    position: absolute;
    width: 25px;
    height: 25px;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    padding: 2px;
    background: white no-repeat 2px 2px;
    opacity: var(--nav-icon-opacity);
    border: 1px solid transparent;
  }

  &:hover {
    &::after {
      border: var(--nav-link-hover-border);
      opacity: var(--nav-icon-color-hover-opacity);
    }
  }

  &:nth-child(1) {
    // Bot Explorer
    &::after {
      -webkit-mask-size: 31px;
      -webkit-mask: url('../../media/ic_bot_explorer.svg') no-repeat;
    }
  }
  &:nth-child(2) {
    // Scripts
    &::after {
      -webkit-mask-size: 31px;
      -webkit-mask: url('../../media/ic_text_document.svg') no-repeat;
    }
  }
  &:nth-child(3) {
    // Notifications
    &::after {
      -webkit-mask-size: 31px;
      -webkit-mask: url('../../media/ic_notification.svg') no-repeat;
    }
    margin-top: auto;
  }
  &:nth-child(4) {
    // Settings
    &::after {
      -webkit-mask-size: 31px;
      -webkit-mask: url('../../media/ic_settings.svg') no-repeat;
    }
  }

  &:focus {
    outline: none;
    &::after {
      opacity: var(--nav-icon-color-hover-opacity);
    }
    &::before {
      opacity: var(--nav-focused-tag-bg-opacity);
    }
  }

  &.disabled, &[aria-disabled] {
    opacity: 0.6;
  }
}
